<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="fotoUsuario.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADoAAAA6CAYAAADhu0ooAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAABCNJREFUaEPtmudqKzEQRu/7v0Z6dRJIQirpPaT3bqc+hcIRDPgaOZF2RrsXX//4
        YLF3NTo7TZL9p16vu/9BXdBOUxe009QF7TR1QTtN2UEbjYZ7e3tz7+/v7uPjw31+fnpxzWevr6/B56yV
        DRRAgB4fH93Ozo6bm5tztVrNjYyMeE1MTLj5+Xm3t7fnnp+fPTjPhMayUBZQAC8vL93U1JTr7e11AwMD
        bnBw0A0NDbnh4WEvrvmM73p6etz09LS7vb31wKExtTIFxSOE4+zsrAcUMPFiOwk4wEtLS1m8awZKrhGC
        eAnFALaKZ/Dw6OioB7WENQFlQkD29/d7z4QgUiRhbQlrAkq4MjkLSBGg4+PjPt9DNlOlBiWfFhcXfciF
        JqwREbK+vu5fZMh2ilSghNX9/b0vIkVy8jcxJkXt5eUlaD9FKlC8SS8kzEITtRCRsrq6qvaqCpQVD288
        hzdFUom1uVoYlHZyenrq8yg0QUv19fW5m5sbVQUuDIo3NzY2shShVmFjf39ftS4uDErOLCwsZM1PEaBr
        a2v+5YbmEiMVKEu9MkCxsby8rCpIKlB2JGWBrqysVAeK8bJCd3t7u5rQpTBQIMqoutigwldSjCj1bKrL
        6KOsvDSQqDAooomz8LZczLeKsdmUazfkKlDe8uHhoW/ooUlaiIg5Pz+v1qMIrzKhHF5lzMnJSff19RW0
        nSI1KLnK8sx6B8NYePPp6clk860GRbSa3d1dM1gpQCcnJ6qW0iwTUEQIb25uqmEF8uDgwPRE0AwUAXt8
        fOxDjoVECjD38gyF7eLiwhQSmYIiQo0TAdbBeIZVDRAhaD6j4HAP97JJoLpqK2xI5qAiPPLw8OBPBzi+
        xMt4i1UO4prP6MOcC8lpfWgsC2UDRVRLPExIc319fe3Ozs58X6RS4zm+4x6LyvqTsoI2S6Cp0KgMuGZl
        BQWGcESEJh7Fm4hrclm+z5GXzTIHxUuSa/RW1qkUm3Y5SqWlcLETkmdzeNoUlEne3d39VXGpqj+1Gam8
        wAPO8SmrIXlZVjIBJewIUyYJYGoPFfEMzzKGHJ1YhbQalDd/dXXlPVIUsFWMIdFAhAAcsp0iFSitgdzC
        AxaArWJMxmbNqw3lwqBAco6TC1IksEdHRyrPFgLFIIZzQ4oElr8LUAtCc/pNyaCU/py/oLUTtmhJ9OMi
        7ScZlJDFKIUiNKGcwib/bCly4pAESsjyewsVNjSRMoRX2aumhnASKCFDUy8zZFuFbVpPahWOBuUNsp3C
        SGgCZYqI4o9YKV6NBuUNWi0ItCJXx8bGfL0IzTWkKFCWYew4yI+Q4SpECrFqiq3AUaAUobJ+UIoVKbS1
        tRUdvlGghC1lvYqW0k7MZWZmJnq1FO1RwvZfyE8Rc0GxeRoFyv6QnAgZrEpA8vLjQrfuvgGGfxJqOIqS
        cgAAAABJRU5ErkJggg==
</value>
  </data>
</root>